
#+STARTUP: showall

* Introduction

If you ever dreamed about creating and switching buffer groups at will
in emacs, [[https://github.com/chimay/torus][Torus]] is the tool you want.

Note that :

  - A location is a pair (buffer (or filename) . position)

  - A buffer group, in fact an location group, is called a circle

  - The set of all buffer groups is called the torus (a circle of circles)

In short, this plugin let you organize your buffers by creating as
many buffer groups as you need, and quickly navigate between :

  - Buffers of the same group

  - Buffer groups (circles)


* History

This project is inspired by MTorus. You can find the original sources
on the links below :

  - The repository of Stefan Kamphausen, the orignal author, is
    available at https://www.skamphausen.de/cgi-bin/ska/mtorus

  - The rewrite by Sebastian Freundt is available on
    https://sourceforge.net/projects/mtorus.berlios/

  - I’ve a personal fork of the second one :
    https://github.com/chimay/mtorus, but I won’t maintain it anymore

The code I forked is complex, so I decided to write a new version from
scratch, easier to maintain and enjoying more recent features of
emacs.


* Features

  - Switch to next/previous group or buffer

    + In a horizontal or vertival split with a prefix argument

  - Go to group or buffer with completion

    + It is recommended to install some good completion in the
      minibuffer (like [[https://github.com/emacs-helm/helm][helm]], [[https://github.com/abo-abo/swiper][swiper]] or ido)

    + Possibility to open the buffer in horizontal or vertical split

  - Search among all files in the torus

  - Open buffers of the group in horizontal or vertical split

    + Be aware that the current buffer in the torus will be the last opened

  - Remember files and positions

    + Auto update of position each time you change buffer or group

    + Possibility to define multiple positions in the same file

    + Possibility do have the same file as member of distinct groups

  - Persistence

    + Save torus to a file

    + Load torus from a file

    + Switch torus easily : just load another torus file

  - On demand loading of files : great for big projects

  - Load a file and append to the existing torus

    + Possibility to add prefixes to the group names, to avoid
      confusion


* Configuration

Here is a sample configuration :

#+begin_src emacs-lisp

  (require 'torus)

  (setq torus-prefix-key (kbd "s-t"))

  (setq torus-save-on-exit t)

  ;; Created if non existent
  (setq torus-dirname "~/.emacs.d/torus/")

  (setq torus-max-vertical-split 3)
  (setq torus-max-horizontal-split 3)

  (torus-init)

  (torus-install-default-bindings)

#+end_src

Suggested additional bindings :

#+begin_src emacs-lisp

  (global-set-key (kbd "<S-s-insert>") 'torus-add-circle)
  (global-set-key (kbd "<s-insert>") 'torus-add-location)

  (global-set-key (kbd "<s-delete>") 'torus-delete-location)
  (global-set-key (kbd "<S-s-delete>") 'torus-delete-circle)

  (global-set-key (kbd "<C-prior>") 'torus-previous-location)
  (global-set-key (kbd "<C-next>") 'torus-next-location)

  (global-set-key (kbd "<C-home>") 'torus-previous-circle)
  (global-set-key (kbd "<C-end>") 'torus-next-circle)

  (global-set-key (kbd "<S-prior>") 'torus-previous-history)
  (global-set-key (kbd "<S-next>") 'torus-next-history)

  (global-set-key (kbd "s-SPC") 'torus-switch-circle)
  (global-set-key (kbd "s-=") 'torus-switch-location)
  (global-set-key (kbd "s-/") 'torus-search)

#+end_src

* Warning

I try to be mindful when I code, but some bugs might remain, so be careful.
